{"ast":null,"code":"var _jsxFileName = \"/Users/alf/DAO-Interface/src/components/Navbar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { HiMenuAlt4 } from \"react-icons/hi\";\nimport { AiOutlineClose } from \"react-icons/ai\";\nimport { shortenAddress } from \"../utils/ShortAdress\";\nimport { AppContext } from \"../context/AppContext\"; // Define chain information for switching\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst networks = {\n  Atlas: {\n    chainId: '0x1ba5',\n    // Binance Smart Chain Mainnet\n    chainName: 'Planq Testnet',\n    rpcUrls: ['https://evm-rpc-atlas.planq.network/']\n  },\n  scroll: {\n    chainId: '0x8274f',\n    // Example, replace with actual\n    chainName: 'Scroll Testnet',\n    rpcUrls: ['https://scroll-sepolia.drpc.org']\n  },\n  testBSC: {\n    chainId: '0x61',\n    // Optimism Sepolia Testnet\n    chainName: 'BNB Testnet',\n    rpcUrls: ['https://bsc-testnet-rpc.publicnode.com']\n  }\n};\n\nconst Navbar = () => {\n  _s();\n\n  const [toggleMenu, setToggleMenu] = useState(false);\n  const {\n    currentAccount,\n    connectWallet\n  } = useContext(AppContext);\n\n  const switchNetwork = async networkName => {\n    const network = networks[networkName];\n\n    try {\n      await window.ethereum.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{\n          chainId: network.chainId\n        }]\n      });\n    } catch (switchError) {\n      if (switchError.code === 4902) {\n        try {\n          await window.ethereum.request({\n            method: 'wallet_addEthereumChain',\n            params: [{\n              chainId: network.chainId,\n              chainName: network.chainName,\n              rpcUrls: network.rpcUrls\n            }]\n          });\n        } catch (addError) {\n          console.error('Failed to add the network:', addError);\n        }\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"w-full flex md:justify-center justify-between items-center p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex relative\",\n      children: [!toggleMenu ? /*#__PURE__*/_jsxDEV(HiMenuAlt4, {\n        fontSize: 28,\n        className: \"text-white md:hidden cursor-pointer\",\n        onClick: () => setToggleMenu(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(AiOutlineClose, {\n        fontSize: 28,\n        className: \"text-white md:hidden cursor-pointer\",\n        onClick: () => setToggleMenu(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this), toggleMenu && /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"z-10 fixed -top-0 -right-2 p-3 w-[70vw] h-screen shadow-2xl md:hidden list-none flex flex-col justify-start items-end rounded-md blue-glassmorphism text-white animate-slide-in\",\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"text-xl w-full my-2\",\n          children: /*#__PURE__*/_jsxDEV(AiOutlineClose, {\n            onClick: () => setToggleMenu(false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Navbar, \"6ABKOnLDhuQh7QJViMYQ4h8Ugis=\");\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["/Users/alf/DAO-Interface/src/components/Navbar.js"],"names":["React","useState","useContext","Link","HiMenuAlt4","AiOutlineClose","shortenAddress","AppContext","networks","Atlas","chainId","chainName","rpcUrls","scroll","testBSC","Navbar","toggleMenu","setToggleMenu","currentAccount","connectWallet","switchNetwork","networkName","network","window","ethereum","request","method","params","switchError","code","addError","console","error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,SAASC,cAAT,QAA+B,sBAA/B;AACA,SAASC,UAAT,QAA2B,uBAA3B,C,CAEA;;;AACA,MAAMC,QAAQ,GAAG;AACfC,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAE,QADJ;AACc;AACnBC,IAAAA,SAAS,EAAE,eAFN;AAGLC,IAAAA,OAAO,EAAE,CAAC,sCAAD;AAHJ,GADQ;AAMfC,EAAAA,MAAM,EAAE;AACNH,IAAAA,OAAO,EAAE,SADH;AACc;AACpBC,IAAAA,SAAS,EAAE,gBAFL;AAGNC,IAAAA,OAAO,EAAE,CAAC,iCAAD;AAHH,GANO;AAWfE,EAAAA,OAAO,EAAE;AACPJ,IAAAA,OAAO,EAAE,MADF;AACU;AACjBC,IAAAA,SAAS,EAAE,aAFJ;AAGPC,IAAAA,OAAO,EAAE,CAAC,wCAAD;AAHF;AAXM,CAAjB;;AAkBA,MAAMG,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BhB,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM;AAAEiB,IAAAA,cAAF;AAAkBC,IAAAA;AAAlB,MAAoCjB,UAAU,CAACK,UAAD,CAApD;;AAEA,QAAMa,aAAa,GAAG,MAAOC,WAAP,IAAuB;AACzC,UAAMC,OAAO,GAAGd,QAAQ,CAACa,WAAD,CAAxB;;AACA,QAAI;AACA,YAAME,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB;AAC1BC,QAAAA,MAAM,EAAE,4BADkB;AAE1BC,QAAAA,MAAM,EAAE,CAAC;AAAEjB,UAAAA,OAAO,EAAEY,OAAO,CAACZ;AAAnB,SAAD;AAFkB,OAAxB,CAAN;AAIH,KALD,CAKE,OAAOkB,WAAP,EAAoB;AAClB,UAAIA,WAAW,CAACC,IAAZ,KAAqB,IAAzB,EAA+B;AAC3B,YAAI;AACA,gBAAMN,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB;AAC1BC,YAAAA,MAAM,EAAE,yBADkB;AAE1BC,YAAAA,MAAM,EAAE,CACJ;AACIjB,cAAAA,OAAO,EAAEY,OAAO,CAACZ,OADrB;AAEIC,cAAAA,SAAS,EAAEW,OAAO,CAACX,SAFvB;AAGIC,cAAAA,OAAO,EAAEU,OAAO,CAACV;AAHrB,aADI;AAFkB,WAAxB,CAAN;AAUH,SAXD,CAWE,OAAOkB,QAAP,EAAiB;AACfC,UAAAA,OAAO,CAACC,KAAR,CAAc,4BAAd,EAA4CF,QAA5C;AACH;AACJ;AACJ;AACJ,GAzBD;;AA2BA,sBACI;AAAK,IAAA,SAAS,EAAC,gEAAf;AAAA,2BAEI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,iBACK,CAACd,UAAD,gBACG,QAAC,UAAD;AACI,QAAA,QAAQ,EAAE,EADd;AAEI,QAAA,SAAS,EAAC,qCAFd;AAGI,QAAA,OAAO,EAAE,MAAMC,aAAa,CAAC,IAAD;AAHhC;AAAA;AAAA;AAAA;AAAA,cADH,gBAOG,QAAC,cAAD;AACI,QAAA,QAAQ,EAAE,EADd;AAEI,QAAA,SAAS,EAAC,qCAFd;AAGI,QAAA,OAAO,EAAE,MAAMA,aAAa,CAAC,KAAD;AAHhC;AAAA;AAAA;AAAA;AAAA,cARR,EAcKD,UAAU,iBACP;AAAI,QAAA,SAAS,EAAC,iLAAd;AAAA,+BACI;AAAI,UAAA,SAAS,EAAC,qBAAd;AAAA,iCACI,QAAC,cAAD;AAAgB,YAAA,OAAO,EAAE,MAAMC,aAAa,CAAC,KAAD;AAA5C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAfR;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH,CA1DD;;GAAMF,M;;KAAAA,M;AA4DN,eAAeA,MAAf","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { HiMenuAlt4 } from \"react-icons/hi\";\nimport { AiOutlineClose } from \"react-icons/ai\";\nimport { shortenAddress } from \"../utils/ShortAdress\";\nimport { AppContext } from \"../context/AppContext\";\n\n// Define chain information for switching\nconst networks = {\n  Atlas: {\n    chainId: '0x1ba5', // Binance Smart Chain Mainnet\n    chainName: 'Planq Testnet',\n    rpcUrls: ['https://evm-rpc-atlas.planq.network/'],\n  },\n  scroll: {\n    chainId: '0x8274f', // Example, replace with actual\n    chainName: 'Scroll Testnet',\n    rpcUrls: ['https://scroll-sepolia.drpc.org'],\n  },\n  testBSC: {\n    chainId: '0x61', // Optimism Sepolia Testnet\n    chainName: 'BNB Testnet',\n    rpcUrls: ['https://bsc-testnet-rpc.publicnode.com'],\n  }\n};\n\nconst Navbar = () => {\n    const [toggleMenu, setToggleMenu] = useState(false);\n    const { currentAccount, connectWallet } = useContext(AppContext);\n\n    const switchNetwork = async (networkName) => {\n        const network = networks[networkName];\n        try {\n            await window.ethereum.request({\n                method: 'wallet_switchEthereumChain',\n                params: [{ chainId: network.chainId }],\n            });\n        } catch (switchError) {\n            if (switchError.code === 4902) {\n                try {\n                    await window.ethereum.request({\n                        method: 'wallet_addEthereumChain',\n                        params: [\n                            {\n                                chainId: network.chainId,\n                                chainName: network.chainName,\n                                rpcUrls: network.rpcUrls\n                            },\n                        ],\n                    });\n                } catch (addError) {\n                    console.error('Failed to add the network:', addError);\n                }\n            }\n        }\n    };\n\n    return (\n        <nav className=\"w-full flex md:justify-center justify-between items-center p-4\">\n            {/* Other content */}\n            <div className=\"flex relative\">\n                {!toggleMenu ? (\n                    <HiMenuAlt4\n                        fontSize={28}\n                        className=\"text-white md:hidden cursor-pointer\"\n                        onClick={() => setToggleMenu(true)}\n                    />\n                ) : (\n                    <AiOutlineClose\n                        fontSize={28}\n                        className=\"text-white md:hidden cursor-pointer\"\n                        onClick={() => setToggleMenu(false)}\n                    />\n                )}\n                {toggleMenu && (\n                    <ul className=\"z-10 fixed -top-0 -right-2 p-3 w-[70vw] h-screen shadow-2xl md:hidden list-none flex flex-col justify-start items-end rounded-md blue-glassmorphism text-white animate-slide-in\">\n                        <li className=\"text-xl w-full my-2\">\n                            <AiOutlineClose onClick={() => setToggleMenu(false)} />\n                        </li>\n                    </ul>\n                )}\n            </div>\n        </nav>\n    );\n};\n\nexport default Navbar;"]},"metadata":{},"sourceType":"module"}